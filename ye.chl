say lowercase;
nop      "say" prints something

yell uppercase;
nop	 "yell" prints something in uppercase

cool is 34;
nop	 variable declaration

nop	----------------------
nop 	 this will be ignored
nop	----------------------
nop	cool is 22;
nop	say /cool%;
nop	totally ignored XD

num cool;
nop	 cool is an integer now

str cool;
nop	 cool is a string now

num cool;

cl is 44;

maybe
cl is 22;
nop	---------------------------------------------------------------------
nop	the "maybe" statement has a 50% chance of executing the line under it
nop	---------------------------------------------------------------------

say cl is /cl%;

say cool is /cool%;
nop	 print value of cool

add cool, 23;
nop	 cool += 23

sub cool, /cool%;
sub cool, 1;
add cool, 23;
mul cool, 2;
div cool, 6;

nop_____________________________________________________________________________________
num cool;
nop ------------------------------------------------------------------------------------
nop lets focus on that line, NUM turns the given variable to an INTEGER
nop so, DIV may return a FLOATING POINT value, but we want a more readable INTEGER value
nop so instead of something like 3.14 we would get 3
nop-------------------------------------------------------------------------------------

pow cool, 2;
nop	 -----------------------------------------------------------------------------_
nop	 we did some math! pow: power, mod: modulus, div: division, you got the idea...|
nop	 -----------------------------------------------------------------------------_|

say cool is /cool%;
nop	 notice the reserved word inside the "say", this works fine even without double quotes

add cool, /cool%;
nop	 var + var operation

say cool is /cool%;

nop	 ------------------------------------
nop	 we will get a big number down here!
nop	 ------------------------------------

big is 1;
num big;
div big, 23;
say /big%;

nop	 ------------------------------------
nop	 now we will skip some code!
nop	 ------------------------------------

jump 90;

nop __________

say hello;

nop ----------
nop ignored :/
nop ----------

say not ignored :);
nop	--------------------------------------------------------------------------
nop	but yea, the lines thing can be a real mess
nop	that's why we have MARKS, you can mark a part of your code, like a comment
nop	but you can jump to it (at the moment you can only jump forward)
nop	--------------------------------------------------------------------------

jump &mark!;

say ignored;

&mark
say hey there!;

maybe
jump &mark2!;
nop	---------------------------------------------------------------------------------------
nop	we can combine these with a "maybe" statement for executing some piece of code randomly
nop	---------------------------------------------------------------------------------------

say maybe this will be ignored :(;

&mark2
say this will not be ignored! :);

cool is 10;
pltx compared is 10;

assuming cool equals /compared%;
say hey;

nop	____________________________________________________________
nop	this is basically an if statement in chill
nop	it ignores the line below it if the expression is False
nop	you should mixture it with a jump
nop	so if an expression is True it will jump to somewhere
nop	instead of just not ignoring the line below
nop	-------------------------------------------------------------

compared is 5;

assuming cool equals /compared%;
say h;

assuming cool not /compared%;
jump &mark3!;

say pls dont ignore me;

&mark3
say ignored again!;

num cool;
num compared;

assuming cool > /compared%;
say greater!;

assuming cool < /compared%;
say lower!;

nop _____________________________________________
nop			NOTE
nop ---------------------------------------------
nop you know, all that stuff is just python
nop so if you can do in python you can do it here
nop ---------------------------------------------

nop ________________________________________________________________
nop				 THE END
nop ----------------------------------------------------------------
nop this is the end, more exemples will arive soon, thanks everyone!
nop ----------------------------------------------------------------
